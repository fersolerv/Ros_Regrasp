// Generated by gencpp from file kautham/ReqQuery.msg
// DO NOT EDIT!


#ifndef KAUTHAM_MESSAGE_REQQUERY_H
#define KAUTHAM_MESSAGE_REQQUERY_H

#include <ros/service_traits.h>


#include <kautham/ReqQueryRequest.h>
#include <kautham/ReqQueryResponse.h>


namespace kautham
{

struct ReqQuery
{

typedef ReqQueryRequest Request;
typedef ReqQueryResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReqQuery
} // namespace kautham


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kautham::ReqQuery > {
  static const char* value()
  {
    return "8010f0f37baac8a6f515fc9a51c49b20";
  }

  static const char* value(const ::kautham::ReqQuery&) { return value(); }
};

template<>
struct DataType< ::kautham::ReqQuery > {
  static const char* value()
  {
    return "kautham/ReqQuery";
  }

  static const char* value(const ::kautham::ReqQuery&) { return value(); }
};


// service_traits::MD5Sum< ::kautham::ReqQueryRequest> should match 
// service_traits::MD5Sum< ::kautham::ReqQuery > 
template<>
struct MD5Sum< ::kautham::ReqQueryRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::ReqQuery >::value();
  }
  static const char* value(const ::kautham::ReqQueryRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::ReqQueryRequest> should match 
// service_traits::DataType< ::kautham::ReqQuery > 
template<>
struct DataType< ::kautham::ReqQueryRequest>
{
  static const char* value()
  {
    return DataType< ::kautham::ReqQuery >::value();
  }
  static const char* value(const ::kautham::ReqQueryRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kautham::ReqQueryResponse> should match 
// service_traits::MD5Sum< ::kautham::ReqQuery > 
template<>
struct MD5Sum< ::kautham::ReqQueryResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::ReqQuery >::value();
  }
  static const char* value(const ::kautham::ReqQueryResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::ReqQueryResponse> should match 
// service_traits::DataType< ::kautham::ReqQuery > 
template<>
struct DataType< ::kautham::ReqQueryResponse>
{
  static const char* value()
  {
    return DataType< ::kautham::ReqQuery >::value();
  }
  static const char* value(const ::kautham::ReqQueryResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KAUTHAM_MESSAGE_REQQUERY_H
