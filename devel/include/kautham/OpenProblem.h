// Generated by gencpp from file kautham/OpenProblem.msg
// DO NOT EDIT!


#ifndef KAUTHAM_MESSAGE_OPENPROBLEM_H
#define KAUTHAM_MESSAGE_OPENPROBLEM_H

#include <ros/service_traits.h>


#include <kautham/OpenProblemRequest.h>
#include <kautham/OpenProblemResponse.h>


namespace kautham
{

struct OpenProblem
{

typedef OpenProblemRequest Request;
typedef OpenProblemResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct OpenProblem
} // namespace kautham


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kautham::OpenProblem > {
  static const char* value()
  {
    return "c60ad7e88ffb07d87f2d90fab0a96706";
  }

  static const char* value(const ::kautham::OpenProblem&) { return value(); }
};

template<>
struct DataType< ::kautham::OpenProblem > {
  static const char* value()
  {
    return "kautham/OpenProblem";
  }

  static const char* value(const ::kautham::OpenProblem&) { return value(); }
};


// service_traits::MD5Sum< ::kautham::OpenProblemRequest> should match 
// service_traits::MD5Sum< ::kautham::OpenProblem > 
template<>
struct MD5Sum< ::kautham::OpenProblemRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::OpenProblem >::value();
  }
  static const char* value(const ::kautham::OpenProblemRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::OpenProblemRequest> should match 
// service_traits::DataType< ::kautham::OpenProblem > 
template<>
struct DataType< ::kautham::OpenProblemRequest>
{
  static const char* value()
  {
    return DataType< ::kautham::OpenProblem >::value();
  }
  static const char* value(const ::kautham::OpenProblemRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kautham::OpenProblemResponse> should match 
// service_traits::MD5Sum< ::kautham::OpenProblem > 
template<>
struct MD5Sum< ::kautham::OpenProblemResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::OpenProblem >::value();
  }
  static const char* value(const ::kautham::OpenProblemResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::OpenProblemResponse> should match 
// service_traits::DataType< ::kautham::OpenProblem > 
template<>
struct DataType< ::kautham::OpenProblemResponse>
{
  static const char* value()
  {
    return DataType< ::kautham::OpenProblem >::value();
  }
  static const char* value(const ::kautham::OpenProblemResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KAUTHAM_MESSAGE_OPENPROBLEM_H
