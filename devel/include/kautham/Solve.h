// Generated by gencpp from file kautham/Solve.msg
// DO NOT EDIT!


#ifndef KAUTHAM_MESSAGE_SOLVE_H
#define KAUTHAM_MESSAGE_SOLVE_H

#include <ros/service_traits.h>


#include <kautham/SolveRequest.h>
#include <kautham/SolveResponse.h>


namespace kautham
{

struct Solve
{

typedef SolveRequest Request;
typedef SolveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Solve
} // namespace kautham


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kautham::Solve > {
  static const char* value()
  {
    return "003b81baa95ab323fc1ddf3c7d0bee81";
  }

  static const char* value(const ::kautham::Solve&) { return value(); }
};

template<>
struct DataType< ::kautham::Solve > {
  static const char* value()
  {
    return "kautham/Solve";
  }

  static const char* value(const ::kautham::Solve&) { return value(); }
};


// service_traits::MD5Sum< ::kautham::SolveRequest> should match 
// service_traits::MD5Sum< ::kautham::Solve > 
template<>
struct MD5Sum< ::kautham::SolveRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::Solve >::value();
  }
  static const char* value(const ::kautham::SolveRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::SolveRequest> should match 
// service_traits::DataType< ::kautham::Solve > 
template<>
struct DataType< ::kautham::SolveRequest>
{
  static const char* value()
  {
    return DataType< ::kautham::Solve >::value();
  }
  static const char* value(const ::kautham::SolveRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kautham::SolveResponse> should match 
// service_traits::MD5Sum< ::kautham::Solve > 
template<>
struct MD5Sum< ::kautham::SolveResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::Solve >::value();
  }
  static const char* value(const ::kautham::SolveResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::SolveResponse> should match 
// service_traits::DataType< ::kautham::Solve > 
template<>
struct DataType< ::kautham::SolveResponse>
{
  static const char* value()
  {
    return DataType< ::kautham::Solve >::value();
  }
  static const char* value(const ::kautham::SolveResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KAUTHAM_MESSAGE_SOLVE_H
