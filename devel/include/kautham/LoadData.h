// Generated by gencpp from file kautham/LoadData.msg
// DO NOT EDIT!


#ifndef KAUTHAM_MESSAGE_LOADDATA_H
#define KAUTHAM_MESSAGE_LOADDATA_H

#include <ros/service_traits.h>


#include <kautham/LoadDataRequest.h>
#include <kautham/LoadDataResponse.h>


namespace kautham
{

struct LoadData
{

typedef LoadDataRequest Request;
typedef LoadDataResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct LoadData
} // namespace kautham


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kautham::LoadData > {
  static const char* value()
  {
    return "90f671570a831ac11355c7d009fb2e4b";
  }

  static const char* value(const ::kautham::LoadData&) { return value(); }
};

template<>
struct DataType< ::kautham::LoadData > {
  static const char* value()
  {
    return "kautham/LoadData";
  }

  static const char* value(const ::kautham::LoadData&) { return value(); }
};


// service_traits::MD5Sum< ::kautham::LoadDataRequest> should match 
// service_traits::MD5Sum< ::kautham::LoadData > 
template<>
struct MD5Sum< ::kautham::LoadDataRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::LoadData >::value();
  }
  static const char* value(const ::kautham::LoadDataRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::LoadDataRequest> should match 
// service_traits::DataType< ::kautham::LoadData > 
template<>
struct DataType< ::kautham::LoadDataRequest>
{
  static const char* value()
  {
    return DataType< ::kautham::LoadData >::value();
  }
  static const char* value(const ::kautham::LoadDataRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kautham::LoadDataResponse> should match 
// service_traits::MD5Sum< ::kautham::LoadData > 
template<>
struct MD5Sum< ::kautham::LoadDataResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::LoadData >::value();
  }
  static const char* value(const ::kautham::LoadDataResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::LoadDataResponse> should match 
// service_traits::DataType< ::kautham::LoadData > 
template<>
struct DataType< ::kautham::LoadDataResponse>
{
  static const char* value()
  {
    return DataType< ::kautham::LoadData >::value();
  }
  static const char* value(const ::kautham::LoadDataResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KAUTHAM_MESSAGE_LOADDATA_H
