// Generated by gencpp from file kautham/Forbidden.msg
// DO NOT EDIT!


#ifndef KAUTHAM_MESSAGE_FORBIDDEN_H
#define KAUTHAM_MESSAGE_FORBIDDEN_H

#include <ros/service_traits.h>


#include <kautham/ForbiddenRequest.h>
#include <kautham/ForbiddenResponse.h>


namespace kautham
{

struct Forbidden
{

typedef ForbiddenRequest Request;
typedef ForbiddenResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Forbidden
} // namespace kautham


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kautham::Forbidden > {
  static const char* value()
  {
    return "3dd11fd9c095043031270a2382709829";
  }

  static const char* value(const ::kautham::Forbidden&) { return value(); }
};

template<>
struct DataType< ::kautham::Forbidden > {
  static const char* value()
  {
    return "kautham/Forbidden";
  }

  static const char* value(const ::kautham::Forbidden&) { return value(); }
};


// service_traits::MD5Sum< ::kautham::ForbiddenRequest> should match 
// service_traits::MD5Sum< ::kautham::Forbidden > 
template<>
struct MD5Sum< ::kautham::ForbiddenRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::Forbidden >::value();
  }
  static const char* value(const ::kautham::ForbiddenRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::ForbiddenRequest> should match 
// service_traits::DataType< ::kautham::Forbidden > 
template<>
struct DataType< ::kautham::ForbiddenRequest>
{
  static const char* value()
  {
    return DataType< ::kautham::Forbidden >::value();
  }
  static const char* value(const ::kautham::ForbiddenRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kautham::ForbiddenResponse> should match 
// service_traits::MD5Sum< ::kautham::Forbidden > 
template<>
struct MD5Sum< ::kautham::ForbiddenResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::Forbidden >::value();
  }
  static const char* value(const ::kautham::ForbiddenResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::ForbiddenResponse> should match 
// service_traits::DataType< ::kautham::Forbidden > 
template<>
struct DataType< ::kautham::ForbiddenResponse>
{
  static const char* value()
  {
    return DataType< ::kautham::Forbidden >::value();
  }
  static const char* value(const ::kautham::ForbiddenResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KAUTHAM_MESSAGE_FORBIDDEN_H
