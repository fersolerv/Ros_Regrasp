// Generated by gencpp from file kautham/CloseProblem.msg
// DO NOT EDIT!


#ifndef KAUTHAM_MESSAGE_CLOSEPROBLEM_H
#define KAUTHAM_MESSAGE_CLOSEPROBLEM_H

#include <ros/service_traits.h>


#include <kautham/CloseProblemRequest.h>
#include <kautham/CloseProblemResponse.h>


namespace kautham
{

struct CloseProblem
{

typedef CloseProblemRequest Request;
typedef CloseProblemResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CloseProblem
} // namespace kautham


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kautham::CloseProblem > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::kautham::CloseProblem&) { return value(); }
};

template<>
struct DataType< ::kautham::CloseProblem > {
  static const char* value()
  {
    return "kautham/CloseProblem";
  }

  static const char* value(const ::kautham::CloseProblem&) { return value(); }
};


// service_traits::MD5Sum< ::kautham::CloseProblemRequest> should match 
// service_traits::MD5Sum< ::kautham::CloseProblem > 
template<>
struct MD5Sum< ::kautham::CloseProblemRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::CloseProblem >::value();
  }
  static const char* value(const ::kautham::CloseProblemRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::CloseProblemRequest> should match 
// service_traits::DataType< ::kautham::CloseProblem > 
template<>
struct DataType< ::kautham::CloseProblemRequest>
{
  static const char* value()
  {
    return DataType< ::kautham::CloseProblem >::value();
  }
  static const char* value(const ::kautham::CloseProblemRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kautham::CloseProblemResponse> should match 
// service_traits::MD5Sum< ::kautham::CloseProblem > 
template<>
struct MD5Sum< ::kautham::CloseProblemResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::CloseProblem >::value();
  }
  static const char* value(const ::kautham::CloseProblemResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::CloseProblemResponse> should match 
// service_traits::DataType< ::kautham::CloseProblem > 
template<>
struct DataType< ::kautham::CloseProblemResponse>
{
  static const char* value()
  {
    return DataType< ::kautham::CloseProblem >::value();
  }
  static const char* value(const ::kautham::CloseProblemResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KAUTHAM_MESSAGE_CLOSEPROBLEM_H
