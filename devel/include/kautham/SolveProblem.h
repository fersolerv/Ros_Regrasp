// Generated by gencpp from file kautham/SolveProblem.msg
// DO NOT EDIT!


#ifndef KAUTHAM_MESSAGE_SOLVEPROBLEM_H
#define KAUTHAM_MESSAGE_SOLVEPROBLEM_H

#include <ros/service_traits.h>


#include <kautham/SolveProblemRequest.h>
#include <kautham/SolveProblemResponse.h>


namespace kautham
{

struct SolveProblem
{

typedef SolveProblemRequest Request;
typedef SolveProblemResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SolveProblem
} // namespace kautham


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kautham::SolveProblem > {
  static const char* value()
  {
    return "c1dcdacd4174100dfb5a14345ba2067d";
  }

  static const char* value(const ::kautham::SolveProblem&) { return value(); }
};

template<>
struct DataType< ::kautham::SolveProblem > {
  static const char* value()
  {
    return "kautham/SolveProblem";
  }

  static const char* value(const ::kautham::SolveProblem&) { return value(); }
};


// service_traits::MD5Sum< ::kautham::SolveProblemRequest> should match 
// service_traits::MD5Sum< ::kautham::SolveProblem > 
template<>
struct MD5Sum< ::kautham::SolveProblemRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::SolveProblem >::value();
  }
  static const char* value(const ::kautham::SolveProblemRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::SolveProblemRequest> should match 
// service_traits::DataType< ::kautham::SolveProblem > 
template<>
struct DataType< ::kautham::SolveProblemRequest>
{
  static const char* value()
  {
    return DataType< ::kautham::SolveProblem >::value();
  }
  static const char* value(const ::kautham::SolveProblemRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kautham::SolveProblemResponse> should match 
// service_traits::MD5Sum< ::kautham::SolveProblem > 
template<>
struct MD5Sum< ::kautham::SolveProblemResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::SolveProblem >::value();
  }
  static const char* value(const ::kautham::SolveProblemResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::SolveProblemResponse> should match 
// service_traits::DataType< ::kautham::SolveProblem > 
template<>
struct DataType< ::kautham::SolveProblemResponse>
{
  static const char* value()
  {
    return DataType< ::kautham::SolveProblem >::value();
  }
  static const char* value(const ::kautham::SolveProblemResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KAUTHAM_MESSAGE_SOLVEPROBLEM_H
