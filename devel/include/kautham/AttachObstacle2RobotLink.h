// Generated by gencpp from file kautham/AttachObstacle2RobotLink.msg
// DO NOT EDIT!


#ifndef KAUTHAM_MESSAGE_ATTACHOBSTACLE2ROBOTLINK_H
#define KAUTHAM_MESSAGE_ATTACHOBSTACLE2ROBOTLINK_H

#include <ros/service_traits.h>


#include <kautham/AttachObstacle2RobotLinkRequest.h>
#include <kautham/AttachObstacle2RobotLinkResponse.h>


namespace kautham
{

struct AttachObstacle2RobotLink
{

typedef AttachObstacle2RobotLinkRequest Request;
typedef AttachObstacle2RobotLinkResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AttachObstacle2RobotLink
} // namespace kautham


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kautham::AttachObstacle2RobotLink > {
  static const char* value()
  {
    return "83fcda13fc99c92fdfe2b2077fd18bb6";
  }

  static const char* value(const ::kautham::AttachObstacle2RobotLink&) { return value(); }
};

template<>
struct DataType< ::kautham::AttachObstacle2RobotLink > {
  static const char* value()
  {
    return "kautham/AttachObstacle2RobotLink";
  }

  static const char* value(const ::kautham::AttachObstacle2RobotLink&) { return value(); }
};


// service_traits::MD5Sum< ::kautham::AttachObstacle2RobotLinkRequest> should match 
// service_traits::MD5Sum< ::kautham::AttachObstacle2RobotLink > 
template<>
struct MD5Sum< ::kautham::AttachObstacle2RobotLinkRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::AttachObstacle2RobotLink >::value();
  }
  static const char* value(const ::kautham::AttachObstacle2RobotLinkRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::AttachObstacle2RobotLinkRequest> should match 
// service_traits::DataType< ::kautham::AttachObstacle2RobotLink > 
template<>
struct DataType< ::kautham::AttachObstacle2RobotLinkRequest>
{
  static const char* value()
  {
    return DataType< ::kautham::AttachObstacle2RobotLink >::value();
  }
  static const char* value(const ::kautham::AttachObstacle2RobotLinkRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kautham::AttachObstacle2RobotLinkResponse> should match 
// service_traits::MD5Sum< ::kautham::AttachObstacle2RobotLink > 
template<>
struct MD5Sum< ::kautham::AttachObstacle2RobotLinkResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kautham::AttachObstacle2RobotLink >::value();
  }
  static const char* value(const ::kautham::AttachObstacle2RobotLinkResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kautham::AttachObstacle2RobotLinkResponse> should match 
// service_traits::DataType< ::kautham::AttachObstacle2RobotLink > 
template<>
struct DataType< ::kautham::AttachObstacle2RobotLinkResponse>
{
  static const char* value()
  {
    return DataType< ::kautham::AttachObstacle2RobotLink >::value();
  }
  static const char* value(const ::kautham::AttachObstacle2RobotLinkResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KAUTHAM_MESSAGE_ATTACHOBSTACLE2ROBOTLINK_H
